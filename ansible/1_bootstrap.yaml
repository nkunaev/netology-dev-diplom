---
- name: Bootstrap
  hosts: all
  become: true
  handlers:
    - name: Restart containerd
      ansible.builtin.service:
        name: containerd
        state: restarted
        enabled: true

  tasks:
    - name: Disable swap
      ansible.builtin.shell: |
        swapoff -a
      changed_when: false

    - name: Turn off swap in fstab
      ansible.builtin.replace:
        path: /etc/fstab
        regexp: '^ ( [^#].?\\sswap\\s+sw\\s+.*)$'
        replace: '# \\1'

    - name: Set hostname
      ansible.builtin.hostname:
        name: "{{ inventory_hostname }}"

    - name: Install necessary packages
      ansible.builtin.apt:
        name:
          - gnupg
          - git
          - apt-transport-https

    - name: Add Docker GPG Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu jammy stable
        state: present

    - name: Add k8s GPG key
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present

    - name: Add k8s repo
      apt_repository:
        repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
        state: present

    - name: Install containerd
      ansible.builtin.apt:
        name: containerd.io
        state: present
        update_cache: true

    - name: Copy config containerd
      ansible.builtin.copy:
        src: files/config.toml
        dest: /etc/containerd/
        remote_src: false
        mode: 0644
        owner: root
        group: root
      notify: Restart containerd

    - name: Restart containerd
      ansible.builtin.meta: flush_handlers

    - name: Load overlay and br_netfilter modules
      ansible.builtin.shell:
        cmd: |
          sudo tee /etc/modules-load.d/containerd.conf <<EOF
          overlay
          br_netfilter
          EOF
      changed_when: false

    - name: Load overlay and br_netfilter modules
      community.general.modprobe:
        name: "{{ item }}"
        state: present
      loop:
        - overlay
        - br_netfilter

    - name: Apply sysctl settings
      ansible.posix.sysctl:
        name: "{{ item }}"
        value: 1
      loop:
        - net.bridge.bridge-nf-call-iptables
        - net.ipv4.ip_forward

    - name: Update hosts file
      ansible.builtin.blockinfile:
        dest: "{{ item }}"
        block: |
          {% for item in groups['all'] %}
          {{ hostvars[item]['ansible_host'] }} {{ item }}
          {% endfor %}
        state: present
      loop:
        - /etc/hosts
        - /etc/cloud/templates/hosts.debian.tmpl

    - name: Install k8s
      ansible.builtin.apt:
        name:
          - kubelet
          - kubeadm
          - kubectl
        state: present
        update_cache: true

    - name: Hold kubelet, kubeadm, and kubectl
      dpkg_selections:
        name: "{{ item }}"
        selection: hold
      loop:
        - kubelet
        - kubeadm
        - kubectl

    - name: Reboot machine
      become: true
      ansible.builtin.reboot:
        post_reboot_delay: 20
        reboot_timeout: 120
        connect_timeout: 180
        test_command: uptime
