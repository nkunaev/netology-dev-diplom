---
- name: Bootstrap
  hosts: all
  become: true
  handlers:
    - name: Restart containerd
      ansible.builtin.service:
        name: containerd
        state: restarted
        enabled: true

  tasks:
    - name: Disable swap
      ansible.builtin.shell: |
        swapoff -a
      changed_when: false

    - name: Turn off swap in fstab
      ansible.builtin.replace:
        path: /etc/fstab
        regexp: '^ ( [^#].?\\sswap\\s+sw\\s+.*)$'
        replace: '# \\1'

    - name: Set hostname
      ansible.builtin.hostname:
        name: "{{ inventory_hostname }}"

    - name: Install necessary packages
      ansible.builtin.apt:
        name:
          - gnupg
          - git
          - apt-transport-https

    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu/dists jammy stable
        state: present

    - name: Download k8s GPG key
      shell: >
        curl -fsSL https://packages.cloud.google.com/apt/doc/apt-key.gpg | gpg --dearmor -o /etc/apt/keyrings/kubernetes-archive-keyring.gpg
      changed_when: false

    - name: Add k8s repo
      shell: >
        echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main' | tee /etc/apt/sources.list.d/kubernetes.list
      changed_when: false

    - name: Install containerd
      ansible.builtin.apt:
        name: containerd.io
        state: present
        update_cache: true

    - name: Copy config containerd
      ansible.builtin.copy:
        src: file/config.toml
        dest: /etc/containerd/
        remote_src: false
        mode: 0644
        owner: root
        group: root
      notify: Restart containerd

    - name: Restart containerd
      ansible.builtin.meta: flush_handlers

    - name: Install k8s
      ansible.builtin.apt:
        name:
          - kubelet
          - kubeadm
          - kubectl
        state: present
        update_cache: true

    - name: Hold kubelet, kubeadm, and kubectl
      dpkg_selections:
        name: "{{ item }}"
        selection: hold
      loop:
        - kubelet
        - kubeadm
        - kubectl

    - name: Load overlay and br_netfilter modules
      ansible.builtin.shell: |
        "modprobe {{ item }}"
      loop:
        - "overlay"
        - "br_netfilter"
      changed_when: false

    - name: Apply sysctl settings
      ansible.posix.sysctl:
        name: "{{ item }}"
        value: 1
      loop:
        - "net.bridge.bridge-nf-call-iptables"
        - "net.ipv4.ip_forward"