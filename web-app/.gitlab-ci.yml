
stages:          # List of stages for jobs, and their order of execution
  - build
  - deploy

build-job-regular:       # This job runs in the build stage, which runs first.
  stage: build
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker build . -t $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
    - cat deployment.yaml
    
build-job-release:       # This job runs in the build stage, which runs first.
  stage: build
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker build . -t $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
    - cat deployment.yaml
  rules:
    - if: $CI_COMMIT_TAG =~ /^v[0-9]+\.[0-9]+(\.[0-9]+|)$/

deploy-job:
  stage: deploy
  needs: [build-job-release]
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - kubectl create deployment $CI_PROJECT_TITLE --image=$CI_REGISTRY_IMAGE:$CI_COMMIT_TAG || kubectl set image deployment $CI_PROJECT_TITLE *=$CI_REGISTRY_IMAGE:$CI_COMMIT_TAG --namespace default
  rules:
    - if: $CI_COMMIT_TAG =~ /^v[0-9]+\.[0-9]+(\.[0-9]+|)$/
